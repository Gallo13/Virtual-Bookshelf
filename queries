# Most Read Author ----------------------------------------------------------------------------------------
    top_author_query = """ SELECT firstname, lastname, COUNT(lastname) as count
                           FROM authors
                            JOIN book_author ON authors.aID = book_author.aID
                            JOIN account_books ON book_author.bID = account_books.bID
                            WHERE account_books.uID = '%s'
                            GROUP BY firstname, lastname
                            ORDER BY count DESC
                            LIMIT 5;""" % session['uID']
    cursor.execute(top_author_query)
    top_author_query_value = cursor.fetchall()
    # print(str(top_author_query_value)[0:300])

    # Convert SQL Query to Pandas Dataframe
    top_author_df = pd.DataFrame([[ij for ij in i] for i in top_author_query_value])
    top_author_df.columns = ['First Name', 'Last Name', 'Count']
    print(top_author_df)

    # Oldest Published Book ----------------------------------------------------------------------------------
    oldest_published_query = """SELECT title, date_published
                                FROM books 
                                JOIN account_books ON books.bID = account_books.bID 
                                WHERE uID = '%s' 
                                ORDER BY date_published ASC LIMIT 5""" % session['uID']
    cursor.execute(oldest_published_query)
    oldest_published_query_value = cursor.fetchall()
    # print(str(oldest_published_query_value)[0:300])

    # Convert SQL Query to Pandas Dataframe
    oldest_published_df = pd.DataFrame([[ij for ij in i] for i in oldest_published_query_value])
    oldest_published_df.columns = ['Title', 'Date Published']
    print(oldest_published_df)

    # Longest Series ---------------------------------------------------------------------------------------------
    longest_series_query = """SELECT b.title, s.seriesName, MAX(b.number_in_series) as NumberInSeries
                            FROM series as s
                            JOIN book_series as bs ON s.sID = bs.sID
                            JOIN books as b ON bs.bID = b.bID
                            JOIN account_books as ab ON b.bID = ab.bID
                            WHERE uID = '%s';""" % session['uID']
    cursor.execute(longest_series_query)
    longest_series_query_value = cursor.fetchall()
    # print(str(longest_series_query_value)[0:300])

    # Convert SQL Query to Pandas Dataframe
    longest_series_df = pd.DataFrame([[ij for ij in i] for i in longest_series_query_value])
    longest_series_df.columns = ['Title', 'Series Name', 'Number In Series']
    print(longest_series_df)

    # Count Each Genre -------------------------------------------------------------------------------------------
    genre_count_query = """SELECT g.genre, COUNT(DISTINCT g.genre) as TotalCount
                            FROM genre as g
                            JOIN book_genre as bg ON g.gID = bg.gID
                            JOIN books as b ON bg.bID = b.bID
                            JOIN account_books as ab ON ab.bID = ab.bID
                            WHERE ab.uID = '%s' GROUP BY g.genre;""" % session['uID']
    cursor.execute(genre_count_query)
    genre_count_query_value = cursor.fetchall()
    # print(str(genre_count_query_value)[0:300])

    # Convert SQL Query to Pandas DataFrame
    genre_count_query_df = pd.DataFrame([[ij for ij in i] for i in genre_count_query_value])
    genre_count_query_df.columns = ['Genre', 'TotalCount']
    print(genre_count_query_df)

    # Count of all books under account -------------------------------------------------------------------------
    books_count_query = """SELECT COUNT(*) as TotalBooks FROM account_books WHERE uID = '%s'""" % session['uID']
    cursor.execute(books_count_query)
    books_count_query_value = cursor.fetchall()
    # print(str(books_count_query_value)[0:300])

    # Convert SQL Query to Pandas DataFrame
    books_count_query_df = pd.DataFrame([[ij for ij in i] for i in books_count_query_value])
    books_count_query_df.columns = ['TotalBooks']
    print(books_count_query_df)

    # Average Rating of all books under account ----------------------------------------------------------------
    avg_rating_query = """SELECT AVG(rating) as AverageRating 
                        FROM books 
                        JOIN account_books AS ab ON books.bID = ab.bID
                        WHERE ab.uID = '%s'""" % session['uID']

    cursor.execute(avg_rating_query)
    avg_rating_query_value = cursor.fetchall()
    # print(str(avg_rating_query_value)[0:300])

    # Convert SQL Query to Pandas DataFrame
    avg_rating_query_df = pd.DataFrame([[ij for ij in i] for i in avg_rating_query_value])
    avg_rating_query_df.columns = ['AverageRating']
    print(avg_rating_query_df)
